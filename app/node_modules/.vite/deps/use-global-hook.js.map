{
  "version": 3,
  "sources": ["../../use-global-hook/esm/core/associateActions.js", "../../use-global-hook/esm/core/setState.js", "../../use-global-hook/esm/core/customHook.js", "../../use-global-hook/esm/core/cleanUpListener.js", "../../use-global-hook/esm/core/newListenerEffect.js", "../../use-global-hook/esm/core/runListeners.js", "../../use-global-hook/esm/plugins/immer/immerAction.js", "../../use-global-hook/esm/plugins/immer/wrapActions.js", "../../use-global-hook/esm/plugins/immer/index.js", "../../use-global-hook/esm/core/setupOptions.js", "../../use-global-hook/esm/core/index.js"],
  "sourcesContent": ["function associateActions(store, actions) {\n  const associatedActions = {};\n  Object.keys(actions).forEach(key => {\n    if (typeof actions[key] === \"function\") {\n      associatedActions[key] = actions[key].bind(null, store);\n    }\n\n    if (typeof actions[key] === \"object\") {\n      associatedActions[key] = associateActions(store, actions[key]);\n    }\n  });\n  return associatedActions;\n}\n\nexport { associateActions };\n", "function setState(store, newState, afterUpdateCallback) {\n  store.state = { ...store.state,\n    ...newState\n  };\n  store.runListeners();\n  afterUpdateCallback && afterUpdateCallback();\n}\n\nexport { setState };\n", "import { useState, useEffect } from 'react';\nimport { newListenerEffect as newListenerEffect$1 } from './newListenerEffect.js';\n\nfunction customHook(store, mapState, mapActions) {\n  const state = mapState ? mapState(store.state) : store.state;\n  const actions = mapActions ? mapActions(store.actions) : store.actions;\n  const originalHook = useState(state)[1];\n  useEffect(newListenerEffect$1(store, state, mapState, originalHook), []); // eslint-disable-line\n\n  return [state, actions];\n}\n\nexport { customHook };\n", "const cleanUpListener = (store, newListener) => () => {\n  store.listeners = store.listeners.filter(listener => listener !== newListener);\n};\n\nexport { cleanUpListener };\n", "import { cleanUpListener as cleanUpListener$1 } from './cleanUpListener.js';\n\nconst newListenerEffect = (store, oldState, mapState, originalHook) => {\n  const newListener = {\n    oldState\n  };\n  newListener.run = mapState ? newState => {\n    const mappedState = mapState(newState);\n\n    if (mappedState !== newListener.oldState) {\n      newListener.oldState = mappedState;\n      originalHook(mappedState);\n    }\n  } : originalHook;\n  store.listeners.push(newListener);\n  return cleanUpListener$1(store, newListener);\n};\n\nexport { newListenerEffect };\n", "const runListeners = store => {\n  store.listeners.forEach(listener => {\n    listener.run(store.state);\n  });\n};\n\nexport { runListeners };\n", "const immerAction = (store, originalFunction) => (...args) => {\n  const result = originalFunction(...args);\n  if (typeof result === \"function\") store.setState(result);\n};\n\nexport { immerAction };\n", "import { immerAction as immerAction$1 } from './immerAction.js';\n\nfunction wrapActions(store, actions) {\n  const wrappedActions = {};\n  Object.keys(actions).forEach(key => {\n    if (typeof actions[key] === \"function\") {\n      const originalFunction = actions[key];\n      actions[key] = immerAction$1(store, originalFunction);\n    }\n\n    if (typeof actions[key] === \"object\") {\n      wrappedActions[key] = wrapActions(store, actions[key]);\n    }\n  });\n  return wrappedActions;\n}\n\nexport { wrapActions };\n", "import { wrapActions as wrapActions$1 } from './wrapActions.js';\n\nconst immerPlugin = (Immer, store) => {\n  const _setState = store.setState;\n\n  store.setState = input => {\n    if (input instanceof Function) {\n      store.state = Immer(store.state, input);\n      store.runListeners();\n    } else {\n      _setState(input);\n    }\n  };\n\n  wrapActions$1(store, store.actions);\n};\n\nexport { immerPlugin };\n", "import { immerPlugin } from '../plugins/immer/index.js';\n\nconst setupOptions = (store, options = {}) => {\n  //Backward compatibility with 0.1.2\n  if (options instanceof Function) {\n    options(store);\n    return;\n  }\n\n  const {\n    Immer,\n    initializer\n  } = options;\n  Immer && immerPlugin(Immer, store);\n  initializer && initializer(store);\n};\n\nexport { setupOptions };\n", "import { associateActions as associateActions$1 } from './associateActions.js';\nimport { setState as setState$1 } from './setState.js';\nimport { customHook as customHook$1 } from './customHook.js';\nimport { runListeners as runListeners$1 } from './runListeners.js';\nimport { setupOptions as setupOptions$1 } from './setupOptions.js';\n\nconst useStore = (initialState, actions, options) => {\n  const store = {\n    state: initialState,\n    listeners: []\n  };\n  store.setState = setState$1.bind(null, store);\n  store.runListeners = runListeners$1.bind(null, store);\n  store.actions = associateActions$1(store, actions);\n  setupOptions$1(store, options);\n  return customHook$1.bind(null, store);\n};\n\nexport default useStore;\n"],
  "mappings": "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",
  "names": []
}
